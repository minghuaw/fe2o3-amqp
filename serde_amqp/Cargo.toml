[package]
name = "serde_amqp"
version = "0.13.2"
edition = "2021"
description = "A serde implementation of AMQP1.0 protocol."
license = "MIT/Apache-2.0"
documentation = "https://docs.rs/serde_amqp/"
homepage = "https://github.com/minghuaw/fe2o3-amqp"
repository = "https://github.com/minghuaw/fe2o3-amqp"
keywords = ["amqp", "serde"]
categories = ["encoding"]
readme = "Readme.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[package.metadata.docs.rs]
all-features = true

[features]
default = []

derive = ["serde_amqp_derive"]
extensions = []

# Provide conversion from json::Value to amqp::Value
# and the value will use deserialize any instead of deserialize enum
# which has some hacky impl for amqp
json = ["serde_json"]

# A temporary feature flag that removes use of deprecated API from `chorono` until next breaking
# release
chrono = ["dep:chrono"]

[dev-dependencies]
criterion.workspace = true
rand.workspace = true
bytes.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
uuid = { workspace = true, features = ["v4"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
uuid = { workspace = true, features = ["v4", "rng-getrandom"] }
getrandom = { workspace = true, features = ["js"] }

[dependencies]
ordered-float = { workspace = true, features = ["serde"] }
serde = { workspace = true, features = ["derive"] }
serde_bytes = { workspace = true }
thiserror = { workspace = true }
bytes = { workspace = true }
indexmap = { workspace = true, features = ["serde"] }

# derive
serde_amqp_derive = { workspace = true, optional = true }

# Optinal dependencies
serde_json = { workspace = true, optional = true }
chrono = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }
time = { workspace = true, optional = true }

[[bench]]
name = "serialize"
harness = false